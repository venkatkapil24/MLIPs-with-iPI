<simulation verbosity='high'>
  <output prefix='simulation'>
    <!-- Select the properties and trajectories of your liking. If you want the same units as in ASE, just specify  {ase}. -->  
    <properties filename='out' stride='200'>  [ step, time{picosecond}, conserved{electronvolt}, temperature{kelvin}, kinetic_md{electronvolt}, potential{electronvolt}, pressure_md{megapascal} ] </properties>
    <trajectory filename='pos' stride='200' format='ase'> positions </trajectory>
    <checkpoint stride='2000'/>
  </output>
  <total_steps>20000</total_steps>
  <prng>
    <seed>31415</seed>
  </prng>
  <ffsocket name='driver' mode='unix' pbc='False'>
      <address> driver </address>
  </ffsocket>
  <system>
    <initialize nbeads='1'>
      <file mode='ase'> init.xyz </file>
      <velocities mode='thermal' units='kelvin'> 300 </velocities>
    </initialize>
    <forces>
      <force forcefield='driver'> </force>
    </forces>
    <motion mode='dynamics'>
      <dynamics mode='nvt'>
        <!-- The perfect value of tau depends on the frequency of the normal mode you want to effectively thermostat. For systems with more than one modes, the unique value will be system specific. However, heurestically a value between 100 and 1000 fs works well in my experience.  --> 
         <thermostat mode='langevin'> 
	   <tau units='femtosecond'> 100 </tau> 
	 </thermostat>
        <!-- Change as per your system  --> 
        <timestep units='femtosecond'> 0.50 </timestep>
      </dynamics>
    </motion>
    <ensemble>
      <temperature units='kelvin'> 300 </temperature>
    </ensemble>
  </system>
</simulation>
